--1
DROP TRIGGER INS_EMPLE;

CREATE  OR REPLACE TRIGGER INS_EMPLE
BEFORE INSERT ON EMPLE
BEGIN
    IF (TO_CHAR(SYSDATE,'HH24:MI') NOT BETWEEN '09:50' AND '17:30') OR
       (TO_CHAR(SYSDATE,'DY') IN ('SAT', 'SUN')) 
       THEN
       RAISE_APPLICATION_ERROR (-20001, 'SOLO SE PUEDE AÑADIR PERSONAL ENTRE LAS 9 Y LAS 17:30');
    END IF;
END;

INSERT INTO EMPLE VALUES (7934,'MUÑOZ','EMPLEADO',7782,'23/01/1982',169000,NULL,10);
INSERT INTO EMPLE VALUES (7934,'MUÑOZ','EMPLEADO',7782,'23/01/1982',169000,NULL,10);

ALTER TRIGGER INS_EMPLE DISABLE;

--2

CREATE OR REPLACE TRIGGER TRIGGER_CTRL_EMPLEADOS
AFTER INSERT OR DELETE OR UPDATE ON EMPLE
FOR EACH ROW
BEGIN
   CASE
       WHEN INSERTING  THEN 
           INSERT INTO CTRL_EMPLEADOS (TABLA, USUARIO, FECHA, OPER)
           VALUES('EMPLE', USER, SYSDATE, 'INSERT');
       WHEN UPDATING  THEN 
           INSERT INTO CTRL_EMPLEADOS (TABLA, USUARIO, FECHA, OPER)
           VALUES('EMPLE', USER, SYSDATE, 'UPDATE');
       WHEN DELETING THEN 
           INSERT INTO CTRL_EMPLEADOS (TABLA, USUARIO, FECHA, OPER)
           VALUES('EMPLEA', USER, SYSDATE, 'DELETE');
       ELSE
           RAISE_APPLICATION_ERROR(-20001, 'ERROR');
   END CASE;
END;


--3   
    
CREATE OR REPLACE TRIGGER DIS_EMPLEADOS_INSERTAR
BEFORE INSERT ON EMPLE
FOR EACH ROW
DECLARE
    V_NUM NUMBER(2);
BEGIN
    SELECT DEPT_NO INTO V_NUM FROM DEPART WHERE UPPER(DNOMBRE) = 'VENTAS';
    IF(:NEW.DEPT_NO = V_NUM) THEN
        RAISE_APPLICATION_ERROR(-20500, 'NO PUEDE INSERTAR EMPLEADOS EN EL DEPARTAMENTO "VENTAS" .');
    END IF;
END;


--4

CREATE OR REPLACE TRIGGER AUMENTOSALARIO
BEFORE UPDATE  OF SALARIO ON EMPLE
    FOR EACH ROW
    WHEN (NEW.SALARIO > OLD.SALARIO*1.20)
BEGIN
    RAISE_APPLICATION_ERROR
    (-20600,('AL EMPLE'||TO_CHAR(:NEW.EMP_NO)||
        'NO SE LE PUEDE AUMENTAR EL SALARIO MAS DE UN 20%'));
END;

--5

CREATE OR REPLACE TRIGGER VALIDVISTA
INSTEAD OF INSERT ON EMPLEADODPTO
FOR EACH ROW
DECLARE
V_DEPT_NO EMPLE.DEPT_NO%TYPE;
E_PRECIMAX EXCEPTION;
PRAGMA EXCEPTION_INIT (E_PRECIMAX,-01438);
E_LONGMAX EXCEPTION;
PRAGMA EXCEPTION_INIT (E_LONGMAX, -012899);
V_ERROR VARCHAR2(256);
E_NOMBRE_REPETIDO EXCEPTION;
BEGIN
 DECLARE
   V_NOM_DEP DEPART.DNOMBRE%TYPE;
   V_NUEVO_DEPT_NO DEPART.DEPT_NO%TYPE;
 BEGIN 
   SELECT DNOMBRE INTO V_NOM_DEP FROM DEPART
   WHERE UPPER(DNOMBRE)=UPPER(:NEW.DNOMBRE);
   EXCEPTION 
     WHEN NO_DATA_FOUND THEN 
       SELECT MAX(DEPT_NO) INTO V_NUEVO_DEPT_NO
       FROM DEPART;
       INSERT INTO DEPART (DEPT_NO,DNOMBRE)
       VALUES(NVL2(V_NUEVO_DEPT_NO,V_NUEVO_DEPT_NO+10,10),:NEW.DNOMBRE);
     WHEN TOO_MANY_ROWS THEN
         RAISE E_NOMBRE_REPETIDO;
 END;
 SELECT DEPT_NO INTO V_DEPT_NO
 FROM DEPART 
 WHERE UPPER(DNOMBRE)=UPPER(:NEW.DNOMBRE);
 INSERT INTO EMPLE (EMP_NO, APELLIDO, FECHA_ALT, DEPT_NO)
 VALUES (:NEW.EMP_NO,:NEW.APELLIDO,SYSDATE,V_DEPT_NO);
 EXCEPTION 
   WHEN NO_DATA_FOUND THEN
     RAISE_APPLICATION_ERROR (-20100,'ERROR, NO HAY DEPARTAMENTO CON EL NOMBRE '||:NEW.DNOMBRE);
   WHEN E_LONGMAX THEN
     RAISE_APPLICATION_ERROR (-20001,'HAS EXCEDIDO LA PRECISION DE LA COLUMNA');
   WHEN E_NOMBRE_REPETIDO THEN
     RAISE_APPLICATION_ERROR (-20003,'REVISA TA TABLA DEPART, HAY DSO CON EL MISMO NOMBRE');
   WHEN OTHERS THEN
     V_ERROR:='ERROR ORACLE DEBIDO A: '||SQLERRM;
     RAISE_APPLICATION_ERROR('-20000', V_ERROR);
END;





